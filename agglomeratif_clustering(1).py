# -*- coding: utf-8 -*-
"""agglomeratif clustering

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13DRjYOxHLAjQuLY5VAXBhRKnMZXxA4UC
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#initialize dataset
df = pd.DataFrame({
    'x' : [12,20,58,12,29,33,24,35,75,52,59,52,75,53,55,61,64,69,72,13,43,56,76,12,34,33,55,12,65],
    'y' : [39,31,10,51,54,46,55,69,13,71,66,67,58,23,14,8,19,7,24,12,45,65,77,33,23,56,77,12,56]
})

#masukan dataframe ke list
points = []
for index, row in df.iterrows():
  point = [row['x'], row['y']]
  points.append(point)

# convert dataframe menjadi numpy array
npa = np.asarray(points, dtype=np.float32)

import scipy.cluster.hierarchy as sch
from sklearn.cluster import AgglomerativeClustering

#ilustrasi dendogram dataset
dendogram = sch.dendrogram(sch.linkage(npa, method = 'ward'))

#agglomerative clustering
hc = AgglomerativeClustering(n_clusters = 3, affinity = 'euclidean', linkage = 'ward')

#hasil agglomerative clustering
y_hc = hc.fit_predict(npa)
y_hc

#visualisasi clustering
plt.scatter(npa[y_hc == 0,0], npa[y_hc == 0,1], s = 100, c = 'cyan')
plt.scatter(npa[y_hc == 1,0], npa[y_hc == 1,1], s = 100, c = 'red')
plt.scatter(npa[y_hc == 2,0], npa[y_hc == 2,1], s = 100, c = 'yellow')